apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "daemonsetlink-operator.controllerManagerName" . }}
  namespace: {{ include "daemonsetlink-operator.namespace" . }}
  labels:
    {{- include "daemonsetlink-operator.labels" . | nindent 4 }}
    control-plane: controller-manager
    {{- with .Values.controllerManager.deploymentLabels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
        {{- with .Values.podAnnotations }} {{/* Using top-level podAnnotations */}}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "daemonsetlink-operator.podLabels" . | nindent 8 }} {{/* Uses top-level .Values.podLabels */}}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "daemonsetlink-operator.serviceAccountName" . }}
      terminationGracePeriodSeconds: {{ .Values.controllerManager.terminationGracePeriodSeconds }}
      {{- if .Values.controllerManager.hostNetwork }}
      hostNetwork: {{ .Values.controllerManager.hostNetwork }}
      {{- end }}
      {{- if .Values.controllerManager.dnsPolicy }}
      dnsPolicy: {{ .Values.controllerManager.dnsPolicy }}
      {{- end }}
      {{- if .Values.controllerManager.priorityClassName }}
      priorityClassName: {{ .Values.controllerManager.priorityClassName }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
      - name: manager
        command:
          {{- if .Values.controllerManager.command }}
          {{- toYaml .Values.controllerManager.command | nindent 10 }}
          {{- else }}
          - /manager
          {{- end }}
        args:
          {{- if .Values.controllerManager.args }}
          {{- toYaml .Values.controllerManager.args | nindent 10 }}
          {{- else }}
          - --leader-elect
          - --health-probe-bind-address=:8081
          {{- end }}
        image: "{{ .Values.image.repository }}:{{ include "daemonsetlink-operator.imageTag" . }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - name: health # Default port name for probes
          containerPort: 8081
          protocol: TCP
        {{- with .Values.controllerManager.containerPorts }}
        {{- tpl (toYaml .) $ | nindent 8 }}
        {{- end }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 3
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        securityContext:
          {{- toYaml .Values.containerSecurityContext | nindent 10 }}
        {{- with .Values.controllerManager.env }}
        env:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with .Values.controllerManager.envFrom }}
        envFrom:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with .Values.controllerManager.volumeMounts }}
        volumeMounts:
          {{- toYaml . | nindent 10 }}
        {{- end }}
      {{- with .Values.controllerManager.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}